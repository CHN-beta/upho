#!/usr/bin/env python
# -*- coding: utf-8 -*-
from __future__ import (absolute_import, division,
                        print_function, unicode_literals)
import argparse


_author__ = "Yuji Ikeda"


def main():
    parser = argparse.ArgumentParser(formatter_class=argparse.RawTextHelpFormatter)
    parser.add_argument("-f", "--filename",
                        default="band.hdf5",
                        type=str,
                        help="Filename for the weights data.")
    parser.add_argument('--format',
                        default='hdf5',
                        type=str,
                        choices=['hdf5', 'text'],
                        help='Output file format.')
    parser.add_argument("--function",
                        default="gaussian",
                        type=str,
                        choices=["gaussian", "lorentzian", "histogram"],
                        help="Function used for the smearing.")
    parser.add_argument("-s", "--sigma",
                        default=0.1,
                        type=float,
                        help="Parameter for the smearing function (THz).\n"
                             "For Gaussian, this is the standard deviation.\n"
                             "For Lorentzian, this is the HWHM (gamma).")
    parser.add_argument("--fmax",
                        default=10.0,
                        type=float,
                        help="Maximum frequency (THz).")
    parser.add_argument("--fmin",
                        default=-2.5,
                        type=float,
                        help="Minimum frequency (THz).")
    parser.add_argument("--fpitch",
                        default=0.05,
                        type=float,
                        help="Frequency pitch (THz).")
    parser.add_argument("--nosquared", dest='is_squared',
                        action='store_false',
                        help="Use raw frequencies instead of Squared frequencies.")
    args = parser.parse_args()

    if args.format == 'hdf5':
        from ph_unfolder.phonon.density_extractor \
            import DensityExtractorHDF5 as DensityExtractor
    elif args.format == 'text':
        from ph_unfolder.phonon.density_extractor \
            import DensityExtractorText as DensityExtractor
    else:
        raise ValueError('Invalid format {}'.format(args.format))

    DensityExtractor(
        filename=args.filename,
        function=args.function,
        fmax=args.fmax,
        fmin=args.fmin,
        fpitch=args.fpitch,
        sigma=args.sigma,
        is_squared=args.is_squared,
    )


if __name__ == "__main__":
    main()
